---

- name: set account code and transactin|job id
  set_fact:
    account_code: "{{ acc_id | default('NA') }}"
    trans_num: "{{ transaction_id | default(999999999999999 | random(start=1)) | replace('\"', '') }}"

- name: Creating socks tunnel without passphrase for single jumphost
  block:
    - name: Setting of required socks_port variables for single jumphost
      set_fact:
        jh_socks_port: "{{ jh1_socks_port }}"
      when:
        - jh_socks_port is undefined
        - jh1_socks_port is defined

    - name: Creating socks tunnel without passphrase for single jumphost
      shell: |
        ps -ef | grep '/tmp/mysocks-{{ account_code }}-{{ trans_num }}-{{ jh_socks_port }}' | grep -v grep
        if [ $? -ne 0 ]; then
          bash -c 'ssh -o ServerAliveInterval=30 -o ServerAliveCountMax=3 -o ExitOnForwardFailure=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ControlMaster=auto -o ControlPersist=no -CfNq -D /tmp/mysocks-{{ account_code }}-{{ trans_num }}-{{ jh_socks_port }} -i {{ jh1_ssh_private_key }} {{ jh1_ssh_user }}@{{ jh1_ip }} -vvvvvv;sleep 5'
        fi
  when:
    - (jh2_ssh_private_key is undefined) or (jh2_ssh_private_key|length == 0)
    - (jh1_ssh_private_key|length > 0)
    - (jh1_ssh_private_key_passphrase is undefined) or (jh1_ssh_private_key_passphrase is none) or (jh1_ssh_private_key_passphrase | trim == '')

- name: Creating socks tunnel without passphrase for two jumphosts
  block:
    - name: Setting of required socks_port variables for two jumphosts
      set_fact:
        jh_socks_port: "{{ jh2_socks_port }}"
      when:
        - jh_socks_port is undefined
        - jh2_socks_port is defined

    - name: Creating socks tunnel without passphrase for two jumphosts
      shell: |
        ps -ef | grep '/tmp/mysocks-{{ account_code }}-{{ trans_num }}-{{ jh_socks_port }}' | grep -v grep
        if [ $? -ne 0 ]; then
          bash -c 'ssh -i $JH2_SSH_PRIVATE_KEY -o ServerAliveInterval=30 -o ServerAliveCountMax=3 -o ExitOnForwardFailure=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ControlMaster=auto -o ControlPersist=no -oProxyCommand="ssh -i $JH1_SSH_PRIVATE_KEY -W {{ jh2_ip }}:{{ jh2_ssh_port }} -o ServerAliveInterval=30 -o ServerAliveCountMax=3 -o ExitOnForwardFailure=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ControlMaster=auto -o ControlPersist=no {{ jh1_ssh_user }}@{{ jh1_ip }}" -CfNq -D /tmp/mysocks-{{ account_code }}-{{ trans_num }}-{{ jh_socks_port }} {{ jh2_ssh_user }}@{{ jh2_ip }} -vvvvvv;sleep 5'
        fi
  when:
    - (jh3_ssh_private_key is undefined) or (jh3_ssh_private_key|length == 0)
    - (jh2_ssh_private_key|length > 0)
    - (jh1_ssh_private_key_passphrase is undefined) or (jh1_ssh_private_key_passphrase is none) or (jh1_ssh_private_key_passphrase | trim == '')

- name: Creating socks tunnel without passphrase for 3 jumphosts
  block:
    - name: Setting of required socks_port variables for 3 jumphosts
      set_fact:
        jh_socks_port: "{{ jh3_socks_port }}"
      when:
        - jh_socks_port is undefined
        - jh3_socks_port is defined

    - name: Creating socks tunnel without passphrase for 3 jumphosts
      shell: |
        ps -ef | grep '/tmp/mysocks-{{ account_code }}-{{ trans_num }}-{{ jh_socks_port }}' | grep -v grep
        if [ $? -ne 0 ]; then
          bash -c 'ssh -i $JH3_SSH_PRIVATE_KEY -o ServerAliveInterval=30 -o ServerAliveCountMax=3 -o ExitOnForwardFailure=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ControlMaster=auto -o ControlPersist=no -oProxyCommand="ssh -i $JH2_SSH_PRIVATE_KEY -W {{ jh3_ip }}:{{ jh3_ssh_port }} -o ServerAliveInterval=30 -o ServerAliveCountMax=3 -o ExitOnForwardFailure=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ControlMaster=auto -o ControlPersist=no -oProxyCommand=\"ssh -i $JH1_SSH_PRIVATE_KEY -W {{ jh2_ip }}:{{ jh2_ssh_port }} -o ServerAliveInterval=30 -o ServerAliveCountMax=3 -o ExitOnForwardFailure=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ControlMaster=auto -o ControlPersist=no {{ jh1_ssh_user }}@{{ jh1_ip }}\" {{ jh2_ssh_user }}@{{ jh2_ip }}" -CfNq -D /tmp/mysocks-{{ account_code }}-{{ trans_num }}-{{ jh_socks_port }} {{ jh3_ssh_user }}@{{ jh3_ip }} -vvvvvv;sleep 5'
        fi
  when:
    - (jh4_ssh_private_key is undefined) or (jh4_ssh_private_key|length == 0)
    - (jh3_ssh_private_key|length > 0)
    - (jh1_ssh_private_key_passphrase is undefined) or (jh1_ssh_private_key_passphrase is none) or (jh1_ssh_private_key_passphrase | trim == '')


- name: Creating socks tunnel without passphrase for 4 jumphosts
  block:
    - name: Setting of required socks_port variables for 4 jumphosts
      set_fact:
        jh_socks_port: "{{ jh4_socks_port }}"
      when:
        - jh_socks_port is undefined
        - jh4_socks_port is defined

    - name: Creating socks tunnel without passphrase for 4 jumphosts
      shell: |
        ps -ef | grep '/tmp/mysocks-{{ account_code }}-{{ trans_num }}-{{ jh_socks_port }}' | grep -v grep
        if [ $? -ne 0 ]; then
          bash -c 'ssh -i $JH4_SSH_PRIVATE_KEY -oPubkeyAuthentication=yes -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand="ssh -i $JH3_SSH_PRIVATE_KEY -W {{ jh4_ip }}:{{ jh4_ssh_port }} -oPubkeyAuthentication=yes -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand=\"ssh -i $JH2_SSH_PRIVATE_KEY -W {{ jh3_ip }}:{{ jh3_ssh_port }} -oPubkeyAuthentication=yes -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand=\\\"ssh -i $JH1_SSH_PRIVATE_KEY -W {{ jh2_ip }}:{{ jh2_ssh_port }} -oPubkeyAuthentication=yes -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -p {{ jh1_ssh_port }} {{ jh1_ssh_user }}@{{ jh1_ip }}\\\" -p {{ jh2_ssh_port }} {{ jh2_ssh_user }}@{{ jh2_ip }}\" -p {{ jh3_ssh_port }} {{ jh3_ssh_user }}@{{ jh3_ip }}" -fN -D /tmp/mysocks-{{ account_code }}-{{ trans_num }}-{{ jh_socks_port }} -p {{ jh4_ssh_port }} {{ jh4_ssh_user }}@{{ jh4_ip }} -vvvvv;sleep 5'
        fi
  when:
    - (jh5_ssh_private_key is undefined) or (jh5_ssh_private_key|length == 0)
    - (jh4_ssh_private_key|length > 0)
    - (jh1_ssh_private_key_passphrase is undefined) or (jh1_ssh_private_key_passphrase is none) or (jh1_ssh_private_key_passphrase | trim == '')


- name: Creating socks tunnel without passphrase for 5 jumphosts
  block:
    - name: Setting of required socks_port variables for 5 jumphosts
      set_fact:
        jh_socks_port: "{{ jh5_socks_port }}"
      when:
        - jh_socks_port is undefined
        - jh5_socks_port is defined

    - name: Creating socks tunnel without passphrase for 5 jumphosts
      shell: |
        ps -ef | grep '/tmp/mysocks-{{ account_code }}-{{ trans_num }}-{{ jh_socks_port }}' | grep -v grep
        if [ $? -ne 0 ]; then
          bash -c 'ssh -i $JH5_SSH_PRIVATE_KEY -oPubkeyAuthentication=yes -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand="ssh -i $JH4_SSH_PRIVATE_KEY -W {{ jh5_ip }}:{{ jh5_ssh_port }} -oPubkeyAuthentication=yes -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand=\"ssh -i $JH3_SSH_PRIVATE_KEY -W {{ jh4_ip }}:{{ jh4_ssh_port }} -oPubkeyAuthentication=yes -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand=\\\"ssh -i $JH2_SSH_PRIVATE_KEY -W {{ jh3_ip }}:{{ jh3_ssh_port }} -oPubkeyAuthentication=yes -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand=\\\\\\\"ssh -i $JH1_SSH_PRIVATE_KEY -W {{ jh2_ip }}:{{ jh2_ssh_port }} -oPubkeyAuthentication=yes -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -p {{ jh1_ssh_port }} {{ jh1_ssh_user }}@{{ jh1_ip }}\\\\\\\" -p {{ jh2_ssh_port }} {{ jh2_ssh_user }}@{{ jh2_ip }}\\\" -p {{ jh3_ssh_port }} {{ jh3_ssh_user }}@{{ jh3_ip }}\" -p {{ jh4_ssh_port }} {{ jh4_ssh_user }}@{{ jh4_ip }}" -fN -D /tmp/mysocks-{{ account_code }}-{{ trans_num }}-{{ jh_socks_port }} -p {{ jh5_ssh_port }} {{ jh5_ssh_user }}@{{ jh5_ip }} -vvvvv;sleep 5'
        fi
  when:
    - (jh6_ssh_private_key is undefined) or (jh6_ssh_private_key|length == 0)
    - (jh5_ssh_private_key|length > 0)
    - (jh1_ssh_private_key_passphrase is undefined) or (jh1_ssh_private_key_passphrase is none) or (jh1_ssh_private_key_passphrase | trim == '')


- name: Validate socks file
  stat:
    path: /tmp/mysocks-{{ account_code }}-{{ trans_num }}-{{ jh_socks_port }}
  register: file_stat

- name: Set fact for validate socks file
  set_fact:
    Socks_File_Created: "{{ 'SUCCESS' if file_stat.stat.exists == true else 'FAILED' }}"
  no_log: true

- debug: var=jh_socks_port

#  no_log: true

# Below variables should be defined in Ansible Tower Invertory within proxy credential group:
# Triple Jumphost
#ansible_ssh_common_args: '-oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand="ssh -i $JH3_SSH_PRIVATE_KEY -W %h:%p -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand=\"ssh -i $JH2_SSH_PRIVATE_KEY -W {{ jh3_ip }}:{{ jh3_ssh_port }} -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand=\\\"ssh -i $JH1_SSH_PRIVATE_KEY -W {{ jh2_ip }}:{{ jh2_ssh_port }} -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null {{ jh1_ssh_user }}@{{ jh1_ip }}\\\" {{ jh2_ssh_user }}@{{ jh2_ip }}\" {{ jh3_ssh_user }}@{{ jh3_ip }}"'
# Double Jumphost
#ansible_ssh_common_args: '-oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand="ssh -i $JH2_SSH_PRIVATE_KEY -W %h:%p -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand=\"ssh -i $JH1_SSH_PRIVATE_KEY -W {{ jh2_ip }}:{{ jh2_ssh_port }} -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null {{ jh1_ssh_user }}@{{ jh1_ip }}\" {{ jh2_ssh_user }}@{{ jh2_ip }}"'
# Single Jumphost
#ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ProxyCommand="ssh -W %h:%p {{ jh_ssh_user }}@{{ jh_ip }} -i $JH_SSH_PRIVATE_KEY -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"'
